CODE
 1: call main, 0 
 2: exit 
 3: PROCBEGIN main 
 4: alloc 26 
 5: move 0, _2 
 6: move _2, _1 
 7: ;; Conditional execution: compare I and 0 ;; 
 8: move 0, _3 
 9: beq _1, _3, 11 
10: goto 16 
11: print "0 = " 
12: move 0, _4 
13: outp _4 
14: newl 
15: goto 38 
16: ;; Conditional execution: compare I and 1 ;; 
17: move 1, _5 
18: beq _1, _5, 20 
19: goto 25 
20: print "1 = " 
21: move 1, _6 
22: outp _6 
23: newl 
24: goto 38 
25: ;; Conditional execution: compare I and 2 ;; 
26: move 2, _7 
27: beq _1, _7, 29 
28: goto 34 
29: print "2 = " 
30: move 2, _8 
31: outp _8 
32: newl 
33: goto 38 
34: print "99 = " 
35: move 99, _9 
36: outp _9 
37: newl 
38: move 1, _10 
39: move _10, _1 
40: ;; Conditional execution: compare I and 0 ;; 
41: move 0, _11 
42: beq _1, _11, 44 
43: goto 49 
44: print "0 = " 
45: move 0, _12 
46: outp _12 
47: newl 
48: goto 71 
49: ;; Conditional execution: compare I and 1 ;; 
50: move 1, _13 
51: beq _1, _13, 53 
52: goto 58 
53: print "1 = " 
54: move 1, _14 
55: outp _14 
56: newl 
57: goto 71 
58: ;; Conditional execution: compare I and 2 ;; 
59: move 2, _15 
60: beq _1, _15, 62 
61: goto 67 
62: print "2 = " 
63: move 2, _16 
64: outp _16 
65: newl 
66: goto 71 
67: print "99 = " 
68: move 99, _17 
69: outp _17 
70: newl 
71: move 2, _18 
72: move _18, _1 
73: ;; Conditional execution: compare I and 0 ;; 
74: move 0, _19 
75: beq _1, _19, 77 
76: goto 82 
77: print "0 = " 
78: move 0, _20 
79: outp _20 
80: newl 
81: goto 104 
82: ;; Conditional execution: compare I and 1 ;; 
83: move 1, _21 
84: beq _1, _21, 86 
85: goto 91 
86: print "1 = " 
87: move 1, _22 
88: outp _22 
89: newl 
90: goto 104 
91: ;; Conditional execution: compare I and 2 ;; 
92: move 2, _23 
93: beq _1, _23, 95 
94: goto 100 
95: print "2 = " 
96: move 2, _24 
97: outp _24 
98: newl 
99: goto 104 
100: print "99 = " 
101: move 99, _25 
102: outp _25 
103: newl 
104: free 26 
105: PROCEND 
